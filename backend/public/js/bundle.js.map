{"version":3,"file":"js/bundle.js","mappings":";;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA,+BAA+B,SAAS,GAAG,OAAO;AAClD;AACA;AACA,SAAS;AACT;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iEAAe,WAAW;;;;;;;;;;;ACtC1B;;;;;;;UCAA;UACA;;UAEA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;UACA;;UAEA;UACA;;UAEA;UACA;UACA;;;;;WCtBA;WACA;WACA;WACA;WACA,yCAAyC,wCAAwC;WACjF;WACA;WACA;;;;;WCPA;;;;;WCAA;WACA;WACA;WACA,uDAAuD,iBAAiB;WACxE;WACA,gDAAgD,aAAa;WAC7D;;;;;;;;;;;;;ACNiD;AACC;AAClD;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,6DAAW;AACvC;AACA;AACA;AACA,CAAC","sources":["webpack://fullstack/./frontend/services/BookService.js","webpack://fullstack/./node_modules/bootswatch/dist/darkly/bootstrap.min.css?d4ae","webpack://fullstack/webpack/bootstrap","webpack://fullstack/webpack/runtime/define property getters","webpack://fullstack/webpack/runtime/hasOwnProperty shorthand","webpack://fullstack/webpack/runtime/make namespace object","webpack://fullstack/./frontend/app.js"],"sourcesContent":["\r\nclass BookService{\r\n\r\n    constructor(){\r\n        this.URI = 'http://localhost:3000/api/books'\r\n    }\r\n\r\n    async getBooks(){\r\n    const res =   await fetch(this.URI);\r\n    const books = await res.json();\r\n    return books;\r\n    }\r\n    \r\n\r\n    async postBook(book){\r\n      const res = await fetch(this.URI,{\r\n          method: 'POST',   \r\n          body: book\r\n      });\r\n      const data = await res.json();\r\n      return data\r\n    }\r\n\r\n   async deleteBook(bookId){\r\n    const res = await fetch('${this.URI}/${bookId}',{\r\n        headers: {\r\n            'Content-Type': 'application/json'\r\n        },\r\n        method: 'DELETE'\r\n    \r\n    });\r\n    \r\n   const data = await res.json();\r\n   console.log(data);\r\n   console.log(bookId);\r\n   }\r\n}\r\n\r\nexport default BookService;","// extracted by mini-css-extract-plugin\nexport {};","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","import BookService from './services/BookService'; \r\nimport 'bootswatch/dist/darkly/bootstrap.min.css';  \r\n\r\n\r\n\r\ndocument.getElementById('book-form')\r\n.addEventListener('submit', e=> {\r\n    const title =  document.getElementById('title').value;\r\n    const author = document.getElementById('author').value;\r\n    const isbn = document.getElementById('isbn').value;\r\n    const image = document.getElementById('image').files;\r\n\r\n    const formData = new FormData();\r\n    formData.append('image', image[0]);\r\n    formData.append('title', title);\r\n    formData.append('author', author);\r\n    formData.append('isbn', isbn);\r\n\r\n    const bookService = new BookService()\r\n    bookService.postBook(formData)\r\n    e.preventDefault();\r\n\r\n})\r\n"],"names":[],"sourceRoot":""}